{"version":3,"file":"static/webpack/static/development/pages/index.js.bbc502a5175746b5c3de.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { PureComponent, Fragment } from 'react';\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nimport data from '../fixture';\n\n\nexport default class Example extends PureComponent {\n\n    render() {\n      return (\n        <Fragment>\n            <p>\n                La idea fué dividir ese capital en 4 líneas de ahorro (100K cada una), simular cada una de ellas desde Nov 2018 y obtener el resultante al día de hoy de cada línea en USD.\n            </p>\n\n            <p>\n                Líneas de ahorro:\n                <ul>\n                    <li>1_ No hacer nada. O sea, mantener los 100K en ARS</li>\n                    <li>2_ Hacer todos los meses un plazo fijo en ARS, cada 30 días rehacer el plazo fijo agregando el interes ganado</li>\n                    <li>3_ Comprar dolares y no hacer nada. Es decir comprar 100K en dolares y mantenerlos</li>\n                    <li>4_ Comprar 100K en bitcoins y mantenerlos</li>\n                </ul>\n\n            </p>\n\n            <LineChart\n                width={1024}\n                height={500}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"ars\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n                <Line type=\"monotone\" dataKey=\"pfijo\" stroke=\"#fc1a4a\" />\n                <Line type=\"monotone\" dataKey=\"usd\" stroke=\"#f7b733\" activeDot={{ r: 8 }} />\n                <Line type=\"monotone\" dataKey=\"btc\" stroke=\"#82ca9d\" />\n            </LineChart>\n        </Fragment>\n      );\n    }\n  }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAIA;AACA;AAEA;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAxCA;AACA;;;;;A","sourceRoot":""}