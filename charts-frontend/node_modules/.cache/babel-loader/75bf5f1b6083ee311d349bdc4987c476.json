{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dudesl/dev/labs/next-learn-demo/0 - Getting Started/practice/pages/index.js\";\nimport React, { PureComponent, Fragment } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport data from '../fixture';\n\nvar Example =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Example, _PureComponent);\n\n  function Example() {\n    _classCallCheck(this, Example);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Example).apply(this, arguments));\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"La idea fu\\xE9 dividir ese capital en 4 l\\xEDneas de ahorro (100K cada una), simular cada una de ellas desde Nov 2018 y obtener el resultante al d\\xEDa de hoy de cada l\\xEDnea en USD.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"L\\xEDneas de ahorro:\", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"1_ No hacer nada. O sea, mantener los 100K en ARS\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"2_ Hacer todos los meses un plazo fijo en ARS, cada 30 d\\xEDas rehacer el plazo fijo agregando el interes ganado\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"3_ Comprar dolares y no hacer nada. Es decir comprar 100K en dolares y mantenerlos\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"4_ Comprar 100K en bitcoins y mantenerlos\"))), React.createElement(LineChart, {\n        width: 500,\n        height: 300,\n        data: data,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"ars\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"pfijo\",\n        stroke: \"#fc1a4a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"usd\",\n        stroke: \"#f7b733\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"btc\",\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Example;\n}(PureComponent);\n\nexport { Example as default };","map":{"version":3,"sources":["/Users/dudesl/dev/labs/next-learn-demo/0 - Getting Started/practice/pages/index.js"],"names":["React","PureComponent","Fragment","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","data","Example","top","right","left","bottom","r"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SACIC,SADJ,EACeC,IADf,EACqBC,KADrB,EAC4BC,KAD5B,EACmCC,aADnC,EACkDC,OADlD,EAC2DC,MAD3D,QAEO,UAFP;AAIA,OAAOC,IAAP,MAAiB,YAAjB;;IAGqBC,O;;;;;;;;;;;;;6BAER;AACP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mMADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4HAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAJJ,CAFJ,CALJ,EAgBI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE,GADX;AAEI,QAAA,MAAM,EAAE,GAFZ;AAGI,QAAA,IAAI,EAAED,IAHV;AAII,QAAA,MAAM,EAAE;AACJE,UAAAA,GAAG,EAAE,CADD;AACIC,UAAAA,KAAK,EAAE,EADX;AACeC,UAAAA,IAAI,EAAE,EADrB;AACyBC,UAAAA,MAAM,EAAE;AADjC,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,oBAAC,aAAD;AAAe,QAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EASI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAUI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,EAWI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,EAYI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,EAaI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,KAA9B;AAAoC,QAAA,MAAM,EAAC,SAA3C;AAAqD,QAAA,SAAS,EAAE;AAAEC,UAAAA,CAAC,EAAE;AAAL,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,EAcI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,OAA9B;AAAsC,QAAA,MAAM,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,EAeI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,KAA9B;AAAoC,QAAA,MAAM,EAAC,SAA3C;AAAqD,QAAA,SAAS,EAAE;AAAEA,UAAAA,CAAC,EAAE;AAAL,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAgBI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,KAA9B;AAAoC,QAAA,MAAM,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,CAhBJ,CADF;AAqCD;;;;EAxCgCf,a;;SAAhBU,O","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nimport data from '../fixture';\n\n\nexport default class Example extends PureComponent {\n\n    render() {\n      return (\n        <Fragment>\n            <p>\n                La idea fué dividir ese capital en 4 líneas de ahorro (100K cada una), simular cada una de ellas desde Nov 2018 y obtener el resultante al día de hoy de cada línea en USD.\n            </p>\n\n            <p>\n                Líneas de ahorro:\n                <ul>\n                    <li>1_ No hacer nada. O sea, mantener los 100K en ARS</li>\n                    <li>2_ Hacer todos los meses un plazo fijo en ARS, cada 30 días rehacer el plazo fijo agregando el interes ganado</li>\n                    <li>3_ Comprar dolares y no hacer nada. Es decir comprar 100K en dolares y mantenerlos</li>\n                    <li>4_ Comprar 100K en bitcoins y mantenerlos</li>\n                </ul>\n\n            </p>\n\n            <LineChart\n                width={500}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"ars\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n                <Line type=\"monotone\" dataKey=\"pfijo\" stroke=\"#fc1a4a\" />\n                <Line type=\"monotone\" dataKey=\"usd\" stroke=\"#f7b733\" activeDot={{ r: 8 }} />\n                <Line type=\"monotone\" dataKey=\"btc\" stroke=\"#82ca9d\" />\n            </LineChart>\n        </Fragment>\n      );\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}